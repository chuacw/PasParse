unit UTokenType;
{$RTTI EXPLICIT METHODS([]) PROPERTIES([]) FIELDS([])}
{$WEAKLINKRTTI ON}
interface

type
//  reference = reference to procedure;
  /// Enum of all available token types
  TTokenType = (
    // Sentinel
    TTEndOfFile,
    // Comments
    TTSingleLineComment,
    TTCurlyBraceComment,
    TTParenStarComment,
    TTCompilerDirective,
    // Values
    TTIdentifier,
    TTNumber,
    TTStringLiteral,
    // Semikeywords (context keywords, can be used as identifiers)
    TTAbsoluteSemikeyword,
    TTAbstractSemikeyword,
    TTAlignSemikeyword,
    TTAssemblerSemikeyword,
    TTAssemblySemikeyword,
    TTAtSemikeyword,
    TTAutomatedSemikeyword,
    TTCdeclSemikeyword,
    TTContainsSemikeyword,
    TTDefaultSemikeyword,
    TTDelayedSemikeyword,
    TTDeprecatedSemikeyword,
    TTDispIdSemikeyword,
    TTDynamicSemikeyword,
    TTExperimentalSemikeyword,
    TTExportSemikeyword,
    TTExternalSemikeyword,
    TTFarSemikeyword,
    TTFinalSemikeyword,
    TTForwardSemikeyword,
    TTHelperSemikeyword,
    TTImplementsSemikeyword,
    TTIndexSemikeyword,
    TTLocalSemikeyword,
    TTMessageSemikeyword,
    TTNameSemikeyword,
    TTNearSemikeyword,
    TTNoDefaultSemikeyword,
    TTOnSemikeyword,
    TTOperatorSemikeyword,
    TTOutSemikeyword,
    TTOverloadSemikeyword,
    TTOverrideSemikeyword,
    TTPackageSemikeyword,
    TTPascalSemikeyword,
    TTPlatformSemikeyword,
    TTPrivateSemikeyword,
    TTProtectedSemikeyword,
    TTPublicSemikeyword,
    TTPublishedSemikeyword,
    TTReadSemikeyword,
    TTReadOnlySemikeyword,
    TTReferenceSemikeyword,
    TTRegisterSemikeyword,
    TTReintroduceSemikeyword,
    TTRequiresSemikeyword,
    TTResidentSemikeyword,
    TTSafecallSemikeyword,
    TTSealedSemikeyword,
    TTStaticSemikeyword,
    TTStdcallSemikeyword,
    TTStoredSemikeyword,
    TTStrictSemikeyword,
    TTUnsafeSemikeyword,
    TTVarArgsSemikeyword,
    TTVirtualSemikeyword,
    TTWriteSemikeyword,
    TTWriteOnlySemikeyword,
    // Real keywords (can't be used as identifiers, except after '.')
    TTAndKeyword,
    TTArrayKeyword,
    TTAsKeyword,
    TTAsmKeyword,
    TTBeginKeyword,
    TTCaseKeyword,
    TTClassKeyword,
    TTConstKeyword,
    TTConstructorKeyword,
    TTDestructorKeyword,
    TTDispInterfaceKeyword,
    TTDivKeyword,
    TTDoKeyword,
    TTDownToKeyword,
    TTElseKeyword,
    TTEndKeyword,
    TTExceptKeyword,
    TTExportsKeyword,
    TTFileKeyword,
    TTFinalizationKeyword,
    TTFinallyKeyword,
    TTForKeyword,
    TTFunctionKeyword,
    TTGotoKeyword,
    TTIfKeyword,
    TTImplementationKeyword,
    TTInKeyword,
    TTInheritedKeyword,
    TTInitializationKeyword,
    TTInlineKeyword,
    TTInterfaceKeyword,
    TTIsKeyword,
    TTLabelKeyword,
    TTLibraryKeyword,
    TTModKeyword,
    TTNilKeyword,
    TTNotKeyword,
    TTObjectKeyword,
    TTOfKeyword,
    TTOrKeyword,
    TTPackedKeyword,
    TTProcedureKeyword,
    TTProgramKeyword,
    TTPropertyKeyword,
    TTRaiseKeyword,
    TTRecordKeyword,
    TTRepeatKeyword,
    TTResourceStringKeyword,
    TTSetKeyword,
    TTShlKeyword,
    TTShrKeyword,
    TTStringKeyword,
    TTThenKeyword,
    TTThreadVarKeyword,
    TTToKeyword,
    TTTryKeyword,
    TTTypeKeyword,
    TTUnitKeyword,
    TTUntilKeyword,
    TTUsesKeyword,
    TTVarKeyword,
    TTWhileKeyword,
    TTWithKeyword,
    TTXorKeyword,
    // Equality / inequality / assignment
    TTColonEquals,
    TTEqualSign,
    TTGreaterOrEqual,
    TTGreaterThan,
    TTLessOrEqual,
    TTLessThan,
    TTNotEqual,
    // Punctuation
    TTAtSign,
    TTCaret,
    TTCloseBracket,
    TTCloseParenthesis,
    TTColon,
    TTComma,
    TTDivideBySign,
    TTDot,
    TTDotDot,
    TTMinusSign,
    TTOpenBracket,
    TTOpenParenthesis,
    TTPlusSign,
    TTSemicolon,
    TTTimesSign
  );

  TTokenTypeHelper = record helper for TTokenType
    function ToString: string;
  end;

implementation
uses System.SysUtils;

{ TTokenTypeHelper }

function TTokenTypeHelper.ToString: string;
//(*
const
  CToString: array[TTokenType] of string =
  (
    'eof', // TTEndOfFile,
    // Comments
    '//', // TTSingleLineComment,
    '{}', // TTCurlyBraceComment,
    '(* *)', // ParenStarComment,
    'compiler directive', // TTCompilerDirective,
    // Values
    'identifier', // TTIdentifier,
    'number', // TTNumber,
    'string', // TTStringLiteral,
    // Semikeywords (context keywords, can be used as identifiers)
    'absolute', // TTAbsoluteSemikeyword,
    'abstract', // TTAbstractSemikeyword,
    'align',    // TTAlignSemikeyword,
    'assembler', // TTAssemblerSemikeyword,
    'assembly', // TTAssemblySemikeyword,
    'at', // TTAtSemikeyword,
    'automated', // TTAutomatedSemikeyword,
    'cdecl', // TTCdeclSemikeyword,
    'contains', // TTContainsSemikeyword,
    'default', // TTDefaultSemikeyword,
    'delayed', // TTDelayedSemikeyword,
    'deprecated', // TTDeprecatedSemikeyword,
    'dispid', // TTDispIdSemikeyword,
    'dynamic', // TTDynamicSemikeyword,
    'experimental', // TTExperimentalSemikeyword,
    'export', // TTExportSemikeyword,
    'external', // TTExternalSemikeyword,
    'far', // TTFarSemikeyword,
    'final', // TTFinalSemikeyword,
    'forward', // TTForwardSemikeyword,
    'helper', // TTHelperSemikeyword,
    'implements', // TTImplementsSemikeyword,
    'index', // TTIndexSemikeyword,
    'local', // TTLocalSemikeyword,
    'message', // TTMessageSemikeyword,
    'name', // TTNameSemikeyword,
    'near', // TTNearSemikeyword,
    'nodefault', // TTNoDefaultSemikeyword,
    'on', // TTOnSemikeyword,
    'operator', // TTOperatorSemikeyword,
    'out', // TTOutSemikeyword,
    'overload', // TTOverloadSemikeyword,
    'override', // TTOverrideSemikeyword,
    'package', // TTPackageSemikeyword,
    'pascal', // TTPascalSemikeyword,
    'platform', // TTPlatformSemikeyword,
    'private', // TTPrivateSemikeyword,
    'protected', // TTProtectedSemikeyword,
    'public', // TTPublicSemikeyword,
    'published', // TTPublishedSemikeyword,
    'read', // TTReadSemikeyword,
    'readonly', // TTReadOnlySemikeyword,
    'reference', // TTReferenceSemikeyword,
    'register', // TTRegisterSemikeyword,
    'reintroduce', // TTReintroduceSemikeyword,
    'requires', // TTRequiresSemikeyword,
    'resident', // TTResidentSemikeyword,
    'safecall', // TTSafecallSemikeyword,
    'sealed', // TTSealedSemikeyword,
    'static', // TTStaticSemikeyword,
    'stdcall', // TTStdcallSemikeyword,
    'stored', // TTStoredSemikeyword,
    'strict', // TTStrictSemikeyword,
    'unsafe', // TTUnsafeSemikeyword,
    'varags', // TTVarArgsSemikeyword,
    'virtual', // TTVirtualSemikeyword,
    'write', // TTWriteSemikeyword,
    'writeonly', //TTWriteOnlySemikeyword,
    // Real keywords (can't be used as identifiers, except after '.')
    'and', // TTAndKeyword,
    'array', // TTArrayKeyword,
    'as', // TTAsKeyword,
    'asm', // TTAsmKeyword,
    'begin', // TTBeginKeyword,
    'case', // TTCaseKeyword,
    'class', // TTClassKeyword,
    'const', // TTConstKeyword,
    'constructor', // TTConstructorKeyword,
    'destructor', // TTDestructorKeyword,
    'dispinterface', // TTDispInterfaceKeyword,
    'div', // TTDivKeyword,
    'do', // TTDoKeyword,
    'downto', // TTDownToKeyword,
    'else', // TTElseKeyword,
    'end', // TTEndKeyword,
    'except', // TTExceptKeyword,
    'exports', // TTExportsKeyword,
    'file', // TTFileKeyword,
    'finalization', // TTFinalizationKeyword,
    'finally', // TTFinallyKeyword,
    'for', // TTForKeyword,
    'function', // TTFunctionKeyword,
    'goto', // TTGotoKeyword,
    'if', // TTIfKeyword,
    'implementation', // TTImplementationKeyword,
    'in', // TTInKeyword,
    'inherited', // TTInheritedKeyword,
    'initialization', // TTInitializationKeyword,
    'inline', // TTInlineKeyword,
    'interface', // TTInterfaceKeyword,
    'is', // TTIsKeyword,
    'label', // TTLabelKeyword,
    'library', // TTLibraryKeyword,
    'mod', // TTModKeyword,
    'nil', // TTNilKeyword,
    'not', // TTNotKeyword,
    'object', // TTObjectKeyword,
    'of', // TTOfKeyword,
    'or', // TTOrKeyword,
    'packed', // TTPackedKeyword,
    'procedure', // TTProcedureKeyword,
    'program', // TTProgramKeyword,
    'property', // TTPropertyKeyword,
    'raise', // TTRaiseKeyword,
    'record', // TTRecordKeyword,
    'repeat', // TTRepeatKeyword,
    'resource', // TTResourceStringKeyword,
    'set', // TTSetKeyword,
    'shl', // TTShlKeyword,
    'shr', // TTShrKeyword,
    'string', //  TTStringKeyword,
    'then', // TTThenKeyword,
    'threadvar', // TTThreadVarKeyword,
    'to', // TTToKeyword,
    'try', //TTTryKeyword,
    'type', // TTTypeKeyword,
    'unit', // TTUnitKeyword,
    'until', // TTUntilKeyword,
    'uses', // TTUsesKeyword,
    'var', // TTVarKeyword,
    'while', // TTWhileKeyword,
    'with', // TTWithKeyword,
    'xor', // TTXorKeyword,
    // Equality / inequality / assignment
    ':=', // TTColonEquals,
    '=', // TTEqualSign,
    '>=', // TTGreaterOrEqual,
    '>', // TTGreaterThan,
    '<=', // TTLessOrEqual,
    '<', // TTLessThan,
    '<>', // TTNotEqual,
    // Punctuation
    '@', // TTAtSign,
    '^', // TTCaret,
    ']', // TTCloseBracket,
    ')', // TTCloseParenthesis,
    ':', // TTColon,
    ',', // TTComma,
    '/', // TTDivideBySign,
    '.', // TTDot,
    '..', // TTDotDot,
    '-', // TTMinusSign,
    '[', // TTOpenBracket,
    '(', // TTOpenParenthesis,
    '+', // TTPlusSign,
    ';', // TTSemicolon,
    '*' // TTTimesSign
  );
begin
  Result := Format('''%s''', [CToString[Self]]);
end;

end.
